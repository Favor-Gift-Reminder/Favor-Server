plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'com.google.cloud.tools.jib' version '3.3.2'
}

group = 'com.favor'
version = '0.0.3-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jib {
    to {
        image = "justuser0129/favor"
        tags = [ "latest" ]
        auth {
            username = project.findProperty('DockerUsername')
            password = project.findProperty('DockerPassword')
        }
    }
    from {
        image = "eclipse-temurin:11-jre"
        auth {
            username = project.findProperty('DockerUsername')
            password = project.findProperty('DockerPassword')
        }
    }
    container {
        creationTime = "USE_CURRENT_TIMESTAMP"
        jvmFlags = ["-Xms128m", "-Xmx128m", '-Dfile.encoding=UTF-8']
        ports = ['8080']
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'commons-io:commons-io:2.11.0'    /* Apache commons-io */
    implementation group: 'commons-fileupload', name: 'commons-fileupload', version: '1.4' /* Apache Commons FileUpload */

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    //Sentry
    implementation("io.sentry:sentry-spring-boot-starter:4.3.0")

    implementation 'org.springframework:spring-context:5.3.12'

    //AWS S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'}

tasks.named('test') {
    useJUnitPlatform()
}
